# SCOTT, TODO 2020 02 22

- [ALMOST] run flake8 and fix all problems:  `$ cd TE_Density; flake8`
        - fyi: flake8 warnings should be addressed, whereas `pylint` can *sometimes*
               be too scrutinous
- [ ] run `plyint` and fix most warnings
- [ ] add comments on magic numbers, like this:  # MAGIC NUMBER <explanation>
        - you don't need to do this to enums b/c an enum is used to store the constants,
          it's usage is defined, c.f. a random constant that only the author knows what it is
- [ ] read up on concepts:
        - Google Python Docstrings  https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html
        - Factory pattern (https://en.wikipedia.org/wiki/Factory_method_pattern)
        - Interface Class (https://en.wikipedia.org/wiki/Interface_(computing))
        - Abstract Base Class (https://docs.python.org/3.4/library/abc.html) (@abstractmethod)
        - callable magic method `__call__`: (https://www.geeksforgeeks.org/callable-in-python/)
        - profiling (https://docs.python.org/3/library/profile.html)
- [ ] add ConfigParser to __main__ of density.py (or similar module for reading configs)
        - add param for window start, delta, stop
- [ ] add unit test for Overlap
- [ ] modify requirements to be nested
        - SEE https://stackoverflow.com/a/20720019
        - add pylint to the dev requirements
- [ ] refactor `import_transposons.py::import_trasnsposons` for input arg
        - input callable for preprocessing instead so client doesn't have to modify the import
        - see the comments on that function
- [ ] add a system test for a client's usage of TE_Density (processing a new organism)
        - use this as an example for how to refactor TE_Density
        - you should be able to just import TE_Density and run it with the new data
        - that is, you should add the new preprocessing code and not have to modify TE_Density
- [ ] add a profiling test for GeneDatum accessing start/stop etc., then add memoization
